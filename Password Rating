def output_error_message(message):
	print(f"An error occurred, {message}")

# Output the title of the program to the user so they know what they are using the program.
print("// Password Security Calculator")

# Constants
LOWERCASE_CHAR_POINTS_ADDED = 5
UPPERCASE_CHAR_POINTS_ADDED = 5
NUMERIC_CHAR_POINTS_ADDED = 10
SPECIAL_CHAR_POINTS_ADDED = 10
SEPARATOR = "-" * 40

# This character set contains all of the valid special characters specified, if any characters need adding, they can be added to this set.
validSpecialCharactersSet = {"!", "%", "&", "*", "+", "="}

# This list will breakdown each reason why a point was added or taken away.
pointsBreakdownList = []

passwordLength = None
totalPoints = 0
lowerPoints = 0
upperPoints = 0
numericPoints = 0
specialCharacterPoints = 0

# The value of inputPassword is null as the input will be got from the user later on.
inputPassword = None

# Validation boolean, this boolean indicates whether the user has entered a valid password so the program can check it.
# If this variable is false, the user hasn't entered a valid value, and it is true if they have.
# The only conditions for this variable is that there has to be atleast one character and be contain only either lowercase, uppercase or numeric characters aswell as characters from the set: "! % & * + ="
inputPasswordValid = False

# The while loop will constantly loop until the user has entered a valid value which is indicated by the boolean inputPasswordValid.
while not inputPasswordValid:
	# Remove every single value from the list incase the user has to reenter the password.
	pointsBreakdownList.clear()
	totalPoints = 0
	totalPoints = 0
	lowerPoints = 0
	upperPoints = 0
	numericPoints = 0
	
	# Inform the user what to type in.
	inputPassword = input("[1]. Please enter a password: ")

	# Check if the user entered a value, if not, try again.
	if inputPassword == "":
		output_error_message("you did not enter a value, please try again!")
	else:
		passwordLength = len(inputPassword)
		containsInvalidCharacters = False
		
		# The for loop will loop through each character in the password to check it.
		for character in inputPassword:
			if character.islower():
				lowerPoints += LOWERCASE_CHAR_POINTS_ADDED 
			elif character.isupper():
				upperPoints += UPPERCASE_CHAR_POINTS_ADDED
			elif character.isnumeric():
				numericPoints += NUMERIC_CHAR_POINTS_ADDED
			elif character in validSpecialCharactersSet:
				specialCharacterPoints += SPECIAL_CHAR_POINTS_ADDED
			else:
				containsInvalidCharacters = True
				break

		# This condition will only be true if the password contains an invalid character, such as for example: "("
		if containsInvalidCharacters:
			output_error_message("an invalid character was found in the password, please try again!")
		else:
			# Finally exit the loop and output the results.
			inputPasswordValid = True

# Print the separator splitting the sections so the program is easier to read.
print(SEPARATOR)

# This variable will contain the output for the password which includes the total score, the breakdown and the security rating.
totalOutput = f"\n[1]. You have entered the password: {inputPassword}.\n"

if passwordLength < 8:
	totalOutput += "[2]. The password is too short."
elif passwordLength > 15:
	totalOutput += "[2]. The password is too long."
else:
	totalOutput += "[2]. The password is a good length."
	if passwordLength >= 10:
		totalPoints += 20
		pointsBreakdownList.append("  +20 points for 10 or more characters")

totalPoints += lowerPoints + upperPoints + numericPoints + specialCharacterPoints

# Sets the variable which contains the total amount of points which will be deducted, this is then subtracted in to the totalPoints variable.
pointsDeducted = 0

# Booleans indicating if the password contains the following in order: lowercase letters, uppercase letters, number characters.
containsLower = False
containsUpper = False
containsNumeric = False
containsSpecialChar = False

# Loop through the password to check each individual character, the booleans above will be changed based upon what was found in the loop.
for character in inputPassword:
	if character.islower():
		containsLower = True
	elif character.isupper():
		containsUpper = True
	elif character.isnumeric():
		containsNumeric = True
	elif character in validSpecialCharactersSet:
		containsSpecialChar = True

if containsLower:
	pointsBreakdownList.append(f"  +{lowerPoints} points for lowercase letters.")
if containsUpper:
	pointsBreakdownList.append(f"  +{upperPoints} points for uppercase letters.")
if containsNumeric:
	pointsBreakdownList.append(f"  +{numericPoints} points for numeric characters.")
if containsSpecialChar:
	pointsBreakdownList.append(f"  +{specialCharacterPoints} points for special characters.")

# Check if the password contains only one from: lowercase letters, uppercase letters or numbers.
if containsLower and not (containsUpper or containsNumeric or containsSpecialChar):
	pointsDeducted = passwordLength * 3
	pointsBreakdownList.append(f"  -{pointsDeducted} for password only containing lowercase letters")
elif containsUpper and not (containsLower or containsNumeric or containsSpecialChar):
	pointsDeducted = passwordLength * 3
	pointsBreakdownList.append(f"  -{pointsDeducted} for password only containing uppercase letters")
elif containsNumeric and not (containsLower or containsUpper or containsSpecialChar):
	pointsDeducted = passwordLength * 5
	pointsBreakdownList.append(f"  -{pointsDeducted} for password only containing numeric characters")

# Set the final score.
totalPoints = totalPoints - pointsDeducted
pointsBreakdownOutput = "\n".join(pointsBreakdownList)

totalOutput += f"""
[3]. This password scored: {totalPoints} points
[4]. Breakdown of the points for the password:
{pointsBreakdownOutput}
"""


# Calculate the score
if totalPoints > 80:
	totalOutput += "[5]. This passwords security rating is: Very high."
elif totalPoints > 70:
	totalOutput += "[5]. This passwords security rating is: High."
elif totalPoints > 40:
	totalOutput += "[5]. This passwords security rating is: Medium."
elif totalPoints > 20:
	totalOutput += "[5]. This passwords security rating is: Low."
else:
	totalOutput += "[5]. This passwords security rating is: Very low."

# Output the title and output rating.
print("// Password Security")
print(totalOutput)

# Add an input to prevent the program from closing as soon as the result is printed.
input()
